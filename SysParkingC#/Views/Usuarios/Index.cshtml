@model IEnumerable<SysParkingC_.Models.Usuario>

@{
    ViewData["Title"] = "Usuários";
}

<div class="container mt-4">
    <h1 class="mb-4 ">Usuários</h1>

    <div class="mb-3 r">
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle me-2"></i> Novo Usuário
        </a>
    </div>

    <!-- Cards Responsivos usando Grid -->
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
        @foreach (var item in Model)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Nome)</h5>
                        <p class="card-text"><strong>Telefone:</strong> @Html.DisplayFor(modelItem => item.Telefone)</p>
                        <p class="card-text"><strong>Endereço:</strong> @Html.DisplayFor(modelItem => item.Endereco)</p>
                        <p class="card-text"><strong>Email:</strong> @Html.DisplayFor(modelItem => item.Email)</p>
                        <p class="card-text">
                            <strong>Senha:</strong>
                            <span id="passwordText" style="display: inline-block;">••••••</span>
                            <input type="text" id="passwordInput" value="@Html.DisplayFor(modelItem => item.Senha)" style="display:none; border: none; background: transparent;" readonly />
                            <button class="btn btn-link" type="button" id="togglePassword" style="margin-left: 5px;">
                                <i class="bi bi-eye"></i>
                            </button>
                        </p>
                        <p class="card-text"><strong>Estacionamento:</strong> @Html.DisplayFor(modelItem => item.Estacionamento.Name)</p>
                    </div>
                    <div class="card-footer text-center">
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning d-flex flex-column">
                                <span class="bi bi-pencil-fill me-1"></span>
                                <p class="m-0 d-inline">Editar</p>
                            </a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info d-flex flex-column">
                                <span class="bi bi-info-circle-fill me-1"></span>
                                <p class="m-0 d-inline">Detalhes</p>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger d-flex flex-column">
                                <span class="bi bi-trash-fill me-1"></span>
                                <p class="m-0 d-inline">Deletar</p>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const togglePassword = document.getElementById('togglePassword');
        const passwordInput = document.getElementById('passwordInput');
        const passwordText = document.getElementById('passwordText');
        let isPasswordVisible = false;

        togglePassword.addEventListener('click', function () {
            if (isPasswordVisible) {
                passwordInput.style.display = 'none';
                passwordText.style.display = 'inline-block';
                togglePassword.innerHTML = '<i class="bi bi-eye"></i>';
            } else {
                passwordInput.style.display = 'inline-block';
                passwordText.style.display = 'none';
                togglePassword.innerHTML = '<i class="bi bi-eye-slash"></i>';
            }
            isPasswordVisible = !isPasswordVisible;
        });
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
